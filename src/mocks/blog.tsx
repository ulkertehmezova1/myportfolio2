

export const posts = [
  {
    id: 1,
    date: "15th October 2023",
    name: "Star Schema və Snowflake Schema nədir ?",
    description: "Datbase sxeması (database schema)-dataların necə təşkil olunduğunu və strukturlaşdırıldığını göstərən verilənlər bazasının məntiqi tərtibatıdır.",
    path: "https://www.simplilearn.com/ice9/free_resources_article_thumb/Star_Schema_vs_Snowflake.jpg",
    content:" \n\nDatbase sxeması (database schema)-dataların necə təşkil olunduğunu və strukturlaşdırıldığını göstərən verilənlər bazasının məntiqi tərtibatıdır. Həmçinin database sxemasını müxtəlif data elementlərinin bir -bir ilə əlaqəsini və onların birlikdə işləyə bilməsini  təmin edən skelet kimidə düşünə bilərik. Power BI -da reportların hazırlanması zamanı düzgün sxemaya sahib olmaq “data modeling ”-in vacib elementidir.Analitik istifadə üçün 2  database sxema növü var. \n <Image src='https://www.boardinfinity.com/blog/content/images/2023/02/Star-vs-Snowflake-Schema.png' alt='asd' width='300' height='200'/> \n<b>1.Star Schema</b> \n<b>2. Snowflake Schema</b> \nBu məqalədə bu iki sxem haqqında danışacam. \n<b>Star sxema nədir? (Star Schema)</b> \nStar sxema məlumatları ulduz formasında saxlayan verlilənlər bazası sxemidir. Bu sxem ulduzun mərkəzində olan bir ədəd “Fact Table”(mərkəzdə yerləşən cədvəl) və fact cədvəl ilə bir başa əlqəli olan bir neçə “Dimension Table”-lardan ibarətdir. Fact сədvəlləri daha çox fakt məlumatları özündə saxlayır. Məsələn bizim “product”, “customer”, “date” cədvəllərimiz var. Lakin hansı müştəri ,hansı məhsulu,  nə vaxt aldığı barədə məlumatları harada yerləşdirməliyik ? Burada fact table meydana gəlir.Dimension cədvəllər açıqlayıcı və kateqoriyalı məlumatlardan ibarət olmaqla fact cədvəlindəki faktları təsvir edən atributları özündə saxlayır . \n Aşağıdakı şəkil star sxemasını göstərir. \n <Image src='https://static.javatpoint.com/tutorial/datawarehouse/images/data-warehouse-what-is-star-schema.png' alt='star_schema' width={0} height={0}/> \nStar sxeması  daha çox “denormalize ”edilmiş məlumat strukturu ilə xarakterizə edilir. Buna görədə bir mövzu ilə (məsələn  satış) bütün məlumatlar  bir böyük cədvəldə (fact cədvəli) yerləşdirilir və daha kiçik ölçülü dimension cədvəllərə qoşulur. \n\n <b>Snowflake Schema nədir ?</b> \n\nSnowflake sxeması məlumatları star sxemadan daha mürəkkəb formada saxlayan verilənlər bazası sxeminin bir növüdür . Snowflake sxema Star sxemada olan denormalize edilmiş dataları normalize etmək məqsədi daşıyır  Snowflake sxemasında mərkəzdə Star sxemada olduğu kimi bir biri ilə  əlaqəli olan fact cədvəl və  dimension cədvəllərdən ibarətdir .Digər tərəfdən snowflake sxemində dimension cədvəllər tam normalize edilənə qədər bir necə cədvəllərə bölünür. Nəticədə snowflake(qardənəciyi) nümunəsi yaranır. Aşağıdakı şəkil snowflake sxemanı göstərir. \n <Image src='https://miro.medium.com/v2/resize:fit:1100/format:webp/1*YFhu8TLdLIevj8W-lwPnMQ.png' alt='snowflake' width={0} height={0}/>"
  },


  {
    id:2,
    date:"10th December 2023",
    name:"Sql Serverdə Triggerlər",
    description:"Triggerlər müəyyən bir hadisədən sonra və ya əvvəl və ya onun yerinə çalışa bilən kod bloklardır.",
    path:"https://miro.medium.com/v2/resize:fit:1100/format:webp/1*ng7X7ytQ9tdMtQ5BfzGdwQ.jpeg",
    content:"\n\nTriggerlər müəyyən bir hadisədən sonra və ya əvvəl və ya onun yerinə çalışa bilən kod bloklardır. Triggerlər cədvəldə, sxemdə, database-in özündə, viewlarda müəyyən edilir. Triggerlər 2 qrupa bölünür: \n\n1) DML Trigger \n2) DDL Trigger \n3) Logon Triggerləri \n\nDDL Trigger və Logon Triggerlər <b><i><u>SYSTEM</u></i></b> Triggerlərdə adlanır. \n\n<b><i>DML TRİGGERLƏR</i></b> \n\nDml triggerlər İNSERT,UPDATE,DELETE əməliyyatları baş verən zaman işə düşür. \n\nDml triggerlərdə öz növbəsində 2 yerə bölünür. \n\n 1) Simple \n 2) Compound \n\n Dml triggerldə zaman göstəricələri mövcuddur .Bunlar triggerlərin nə zaman yəni DML əməliyyatlarından əvvəl və ya sonra işə düşəcəyini müəyyənləşdirir. \n Zaman göstəriciləri aşağıdakılardır : \n\n BEFORE \n AFTER \n INSTEAD OF \n\nSimple triggerlərdə triggerlər zaman göstəricilərinin yanlız biri üzrə çalışır. Simple triggerləri yaradarkən yanlız bir zaman göstəricisi üzrə yarada bilərik. \n\n <b>DML Triggerlər necə yaradılır ?</b> \n SQL Serverdə triggerin yaradılması prosesi aşağıdakı şəkildə göstərilmişdir. \n\n<Image alt='trigger' class= 'trigger'/> \n\n <b>Triggerlərdə köhnə və yeni data göstəriciləri.</b> \n\nƏgər cədvəl üzərində hər hansı DML əməliyyatı baş verirsə, deməli, cədvəldə məlumatlar üzərində dəyişikliklər edilmişdir .Məsələn, biz cədvəlin hər hansı sütununda UPDATE əməliyyatı ediriksə artıq burada sətir daxilində olan köhnə data yenisi ilə əvəz olunur və beləliklə OLD VALUE, NEW VALUE yaranmış olur. \nOracle Server köhnə və yeni dəyərləri iki ayrı rekord şəklində saxlayır və triggerlər vasitəsi ilə cədvəlin köhnə və yeni dəyərlərinə çata bilirik. Virtual olaraq aşağıdakı cədvəl şəklində vəziyyəti təsvir edə bilərəm. \n\n <Image class='old_new'  alt='old new' width={0} heigth={0}/> \n\nBu сədvələ baxsaq INSERT əməliyyatı baş verib, lakin, OLD VALUE null göstərir və NEW VALUE sütunuda isə yeni dəyər var .OLD VALUE sütunun null olmasının səbəbi cədvələ yeni bir dəyərin əlavə olunmasıdır yəni köhnə məlumat olmayıb .Lakin, UPDATE VƏ DELETE kimi digər əməliyyatlara baxsaq OLD VALUE sütununda köhnə məlumatlar mövcuddur. \nTriggerlərin köhnə və yeni məlumatları göstərə bilməsi üçün triggeri yaradarkən istifadə etdiyimiz scriptin decalartion hissəsinə <b>[Referencing old as O new as N]</b>,body hissəsinə isə aşağıdakıları qeyd edirik: \n\n:o.sütunun_adı (:o.salary)-köhnə dəyər üçün \n\n:n.sütunun_adı(:n.salary)-yeni dəyərlər üçün. \n\n <b>“Row Level və Statement Level” Triggerlər</b> \n\nTriggerlər “Row Level”, “Statement Level” olaraq təsnif edilir. \n\n<b>STATEMENT LEVEL</b> triggerlərdə hər bir əməliyyat üçün trigger yanlız bir dəfə işə düşür.Daha aydın olması üçün hesab edək ki, 1500 sətr məlumatı cədvələ İNSERT əməliyyatı ilə əlavə edirik .Bu zaman statement level trigger yanlız bir dəfə işə düşəcək \n\n<b>ROW LEVEL</b> triggerlərdə hər bir əməliyyat üçün trigger cədvəlin hər sətri üzrə bir dəfə işə düşür.Məsələn, 1500 sətr məlumat cədvələ İNSERT əməliyyatı ilə əlavə ediriksə bu zaman ROW level trigger 1500 dəfə işə düşəcək. \nQeyd edim ki, triggerlər default olaraq STATEMENT level olurlar. Triggerləri ROW levelə çevirmək üçün onları yaratmaq üçün istifadə etdiyimiz script-in declaration hissəsinə [FOR EACH ROW] əlavə edirik. \n\n <b>Conditional Predicates</b> \n\nDML triggerlər bir neçə trigger ifadələrindən ibarət ola bilər .Bu ifadələrdən biri işə salındıqda CONDİTİONAL PREDİCATES vasitəsi ilə triggeri hansı DML ifadəsinin işə saldığı müəyyənləşdirmək olur.Boolen ifadələrin olduğu yerlədə CONDİTİONAL PREDİCATES işlənə bilər.\n CONDİTİONAL PREDİCATES aşağıdakılardır: \n\n1) İnserting \n2) Updateing \n3) Updateing(column) \n4) Deleting \n\nAşağıdakı nümunədə conditional predicates istifadə edərək tirggeri işə salan DML ifadəsini bilmək olar .Bu nümunədə IF ifadəsinindən istifadə edərək CONDİTİONAL PREDİCATES işə salmışam. Lakin bu əməliyyatı CASE kimi boolen ifadələrdən istifadə edərək də edə bilərik. \n\n <Image class='script' width={0} height={0} alt='trigger_script' />"},
];
